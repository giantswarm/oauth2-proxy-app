apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    k8s-app: {{ .Values.name }}
  name: {{ .Values.name }}
  namespace: {{ .Release.Namespace }}
spec:
  replicas: 2
  selector:
    matchLabels:
      k8s-app: {{ .Values.name }}
  template:
    metadata:
      labels:
        k8s-app: {{ .Values.name }}
    spec:
      serviceAccountName: {{ .Values.name }}
      securityContext:
        runAsUser: {{ .Values.userID }}
        runAsGroup: {{ .Values.groupID }}
      containers:
        # Use retagged image from https://github.com/gfkse/oauth2_proxy/tree/kubernetes,
        # a fork from the discontinued bitly/oauth2_proxy, which supports OIDC token renewal.
        # See also: https://github.com/bitly/oauth2_proxy/pull/621.
      - image: {{ .Values.registry.domain }}/giantswarm/oauth2_proxy:kubernetes-3-ca-certs
        name: {{ .Values.name }}
        args:
        - --cookie-expire=24h0m0s
        - --cookie-refresh=0h60m0s
        - --email-domain=*
        - --http-address=0.0.0.0:4180
        - --provider=oidc
        - --set-authorization-header=true
        - --skip-provider-button=true
        - --oidc-issuer-url=https://giantswarm.eu.auth0.com/
        - --login-url=https://giantswarm.eu.auth0.com/authorize
        - --redeem-url=https://giantswarm.eu.auth0.com/oauth/token
        - --validate-url=https://giantswarm.eu.auth0.com/userinfo
        - --upstream=file:///dev/null
        env:
        - name: OAUTH2_PROXY_CLIENT_ID
          valueFrom:
            secretKeyRef:
              name: oauth2-proxy-secret
              key: client-id
        - name: OAUTH2_PROXY_CLIENT_SECRET
          valueFrom:
            secretKeyRef:
              name: oauth2-proxy-secret
              key: client-secret
        - name: OAUTH2_PROXY_COOKIE_SECRET
          valueFrom:
            secretKeyRef:
              name: oauth2-proxy-secret
              key: cookie-secret
        ports:
        - name: {{ .Values.name }}
          containerPort: 4180
          protocol: TCP
        livenessProbe:
          tcpSocket:
            port: 4180
          initialDelaySeconds: 5
          timeoutSeconds: 1
        readinessProbe:
          tcpSocket:
            port: 4180
          initialDelaySeconds: 5
          timeoutSeconds: 1
        resources:
          limits:
            cpu: 100m
            memory: 100Mi
          requests:
            cpu: 100m
            memory: 100Mi
