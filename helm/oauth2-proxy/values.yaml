# Use nameOverride to change the names of resources
# nameOverride: "my-oauth2-proxy"

port:
  name: oauth2-proxy
  port: 4180

registry:
  domain: gsoci.azurecr.io

ingress:
  # Set to true to create an ingress resource for the oauth2-proxy service.
  enabled: false

  # Automatically fetch certificate(s) from Let's Encrypt
  # (requires cert-manager)
  letsencrypt:
    enabled: true

  tls:
    enabled: true

  # `hosts` is used to configure one or several host names to listen to. Takes precedence over `host`, unless it's an empty array.
  hosts: []
  # Prefix of the TLS secrets in the case of multiple hosts,
  # or name of the secret in case of only one host (if Let's Encrypt is enabled)
  certSecretName: "oauth2-proxy"

  ingressClassName: "nginx"

  # Additional annotations to apply to the ingress.
  extraAnnotations: {}
  # key: value

# IMPORTANT: No resources will be deployed unless at least one provider is defined in oauth2Proxy.providers.
oauth2Proxy:
  # extra arguments to pass to all oauth2-proxy independant on the provider.
  extraArgs:
  - --cookie-expire=24h0m0s
  - --cookie-name=session
  - --cookie-refresh=0h60m0s
  - --cookie-secure=true
  - --email-domain=*
  - --pass-access-token=true
  - --pass-authorization-header=true
  - --set-authorization-header=true
  - --set-xauthrequest=true
  - --skip-jwt-bearer-tokens=true
  - --skip-provider-button=true
  extraEnv: []
  providers: []
  # - id: "default"
  #   provider: "oidc"
  #   clientID: ""
  #   clientSecret: ""
  #   # secret must be 16, 24, or 32 bytes long
  #   cookieSecret: ""
  #   # extra arguments to pass to the oauth2-proxy for this provider.
  #   extraArgs: []
  #   extraEnv: []

# Add seccomp to pod security context
podSecurityContext:
  runAsUser: 1000
  runAsGroup: 1000
  runAsNonRoot: true
  seccompProfile:
    type: RuntimeDefault

# Add seccomp to container security context
containerSecurityContext:
  allowPrivilegeEscalation: false
  readOnlyRootFilesystem: true
  capabilities:
    drop:
    - ALL
  seccompProfile:
    type: RuntimeDefault

serviceMonitor:
  enabled: true
  # -- (duration) Prometheus scrape interval.
  interval: "60s"
  # -- (duration) Prometheus scrape timeout.
  scrapeTimeout: "45s"

networkPolicy:
  # Set to true to create network policies
  enabled: true
  # Flavor of network policy to create: "kubernetes" or "cilium"
  # "kubernetes" - creates standard Kubernetes NetworkPolicy
  # "cilium" - creates Cilium NetworkPolicy (CNP)
  flavor: "kubernetes"
